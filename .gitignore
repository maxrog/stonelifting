# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
ios/**/*.xcuserstate
ios/**/*.xcworkspace/xcuserdata/
ios/**/*.xcodeproj/xcuserdata/
ios/**/*.xcodeproj/project.xcworkspace/xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
ios/**/*.xcscmblueprint
ios/**/*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
ios/**/build/
ios/**/DerivedData/
ios/**/*.moved-aside
ios/**/*.pbxuser
ios/**/*.mode1v3
ios/**/*.mode2v3
ios/**/*.perspectivev3

## Obj-C/Swift specific
ios/**/*.hmap

## App packaging
ios/**/*.ipa
ios/**/*.dSYM.zip
ios/**/*.dSYM

## Playgrounds
ios/**/timeline.xctimeline
ios/**/playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
ios/**/.swiftpm

ios/**/*.xcodeproj/project.xcworkspace/
ios/**/*.xcodeproj/xcuserdata/
ios/**/*.xcworkspace/xcuserdata/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
ios/**/Pods/
ios/**/*.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

ios/**/Carthage/Build/

# Accio dependency management
ios/**/Dependencies/
ios/**/.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

ios/**/fastlane/report.xml
ios/**/fastlane/Preview.html
ios/**/fastlane/screenshots/**/*.png
ios/**/fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

ios/**/iOSInjectionProject/

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Backend (from earlier)
backend/.env
backend/.env.*
!backend/.env.example
backend/.build/
backend/.swiftpm/
backend/DerivedData/
backend/*.db
backend/*.sqlite
backend/*.sqlite3

# Logs
*.log
logs/

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp
tmp/
temp/

# OS generated files
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/